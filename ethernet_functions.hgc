uint16_t http200ok(void){
  return(es.ES_fill_tcp_data_p(buf,0,PSTR("HTTP/1.0 200 OK\r\nContent-Type: text/html\r\nPragma: no-cache\r\n\r\n")));
}

uint16_t http404(void){
  return(es.ES_fill_tcp_data_p(buf,0,PSTR("HTTP/1.0 404 OK\r\nContent-Type: text/html\r\n\r\n")));
}

uint16_t print_webpage(uint8_t *buf){
  uint16_t plen;
  plen=http200ok();
  plen=es.ES_fill_tcp_data_p(buf,plen,PSTR("{\"drawer_status\":\""));
  //plen=es.ES_fill_tcp_data_p(buf,plen,PSTR(drawerStatus));
  plen=es.ES_fill_tcp_data_p(buf,plen,PSTR("\",\"ambient_light\":\"false\"}"));
  return(plen);
}

uint16_t print_404(uint8_t *buf){
  uint16_t plen;
  plen=http404();
  plen=es.ES_fill_tcp_data_p(buf,plen,PSTR("<h1>Not found</h1>"));
  return(plen);
}

void send_home(uint16_t dat_p){
  dat_p=print_webpage(buf);
  es.ES_www_server_reply(buf,dat_p);
}

void send_404(uint16_t dat_p){
  dat_p=print_404(buf);
  es.ES_www_server_reply(buf,dat_p);
}

#define CMDBUF 50

void process_request(char *str, uint16_t dat_p){
  int8_t r=-1;
  int8_t i = 0;
  char clientline[CMDBUF];
  int index = 0;
  int plen = 0;

  char ch = str[index];
  
  while( ch != ' ' && index < CMDBUF) {
    clientline[index] = ch;
    index++;
    ch = str[index];
  }
  clientline[index] = '\0';

  // convert clientline into a proper
  // string for further processing
  String urlString = String(clientline);

  // extract the operation
  String op = urlString.substring(0,urlString.indexOf(' '));

  // we're only interested in the first part...
  urlString = urlString.substring(urlString.indexOf('/'), urlString.indexOf(' ', urlString.indexOf('/')));

  // put what's left of the URL back in client line
  urlString.toCharArray(clientline, CMDBUF);

  // get the first two parameters
  char *pin = strtok(clientline,"/");
  char *value = strtok(NULL,"/");

  // this is where we actually *do something*!
  char outValue[10] = "MU";
  char jsonOut[50];

  if(pin != NULL){
    if(value != NULL){
      
      debug("Analizing data...");
      
      if(strncmp(pin, "effect", 6) == 0){
        
        debug("HTTP request effect");
        
        if(strncmp(value, "1", 1) == 0){
          debug("Processing effect 1");
          send_home(dat_p);
          drawer_leds_effect(1);
        }
        
        else if(strncmp(value, "2", 1) == 0){
          debug("Processing effect 2");
          send_home(dat_p);
          drawer_leds_effect(2);
        }
        
        else {
          send_404(dat_p);
        }
        
      }
      
    }
  } else {  
    send_404(dat_p);
  }
}